// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid())
  username        String         @unique
  email           String         @unique
  password        String
  sentMessages    Message[]      @relation("sentMessages")
  receivedMessages Message[]      @relation("receivedMessages")
  profilePicture String?
  conversations   Conversation[] @relation("UserConversations")
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model Message {
  id           String       @id @default(uuid())
  content      String
  sender       User         @relation("sentMessages", fields: [senderId], references: [id])
  receiver     User         @relation("receivedMessages", fields: [receiverId], references: [id])
  senderId     String
  receiverId   String
  conversation Conversation @relation(fields: [conversationId], references: [id])
  conversationId String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Conversation {
  id            String    @id @default(uuid())
  participants  User[]    @relation("UserConversations")
  messages      Message[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}